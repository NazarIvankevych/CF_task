substitutions:
  _APP: 'task-cf'
  _PY_DIR: 'task-cf/function'
  _TF_DIR: 'task-cf/terraform'
  _TF_ACTION: 'apply'

steps:
  # - id: "ls"
  #   name: 'ubuntu'
  #   args:
  #     - 'ls'
  
  # - id: "pwd"
  #   name: 'ubuntu'
  #   args:
  #     - 'pwd'

  - id: 'tf init'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: sh
    dir: 'task-cf/terraform'
    args:
      - '-c'
      - 'terraform init'

  - id: 'tf plan'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: sh
    dir: 'task-cf/terraform'
    args:
      - '-c'
      - 'terraform plan -lock=false -out=plan.out'

  - id: 'tf apply'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: sh
    dir: 'task-cf/terraform'
    args:
      - '-c'
      - 'terraform apply -auto-approve -lock=false'
  
  # - id: 'tf destroy'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: sh
  #   args:
  #     - '-c'
  #     - 'terraform plan -destroy -out=plan.out'

  # - id: 'tf destroy plan'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: sh
  #   args:
  #     - '-c'
  #     - 'terraform apply plan.out'

  # - id: "Activate virtual environment venv"
  #   name: 'gcr.io/task-cf-370710/dataflow-python38'
  #   entrypoint: '/bin/bash'
  #   args: [ '-c', 'source /venv/bin/activate' ]
  #   waitFor: ['-']

  # - id: "Create dataflow template"
  #   name: 'gcr.io/task-cf-370710/dataflow-python38'
  #   entrypoint: 'python3'
  #   args: [ 'task-df/main.py',
  #     "--job_name=dataflow-job",
  #     "--project=task-cf-370710",
  #     "--region=us-central1",
  #     "--staging_location=gs://task-cf-370710-dataflow-bucket/tmp",
  #     "--temp_location=gs://task-cf-370710-dataflow-bucket/tmp",
  #     "--template_location=gs://task-cf-370710-dataflow-bucket/template/dataflow-job",
  #     "--input_subscription=projects/task-cf-370710/subscriptions/cf-pub_sub-subscription",
  #     "--output_table=task-cf-370710:task_df_dataset.table-dataflow",
  #     "--output_error_table=task-cf-370710:task_df_dataset.table-dataflow-error",
  #     "--runner=DataflowRunner",
  #     "--setup_file='task-df/function/setup.py'",
  #     "--autoscaling_algorithm=NONE"
  #   ]
  #   waitFor: [
  #     'Activate virtual environment venv', 'tf init', 'tf plan', 'tf apply'
  #     ]

options:
  logging: CLOUD_LOGGING_ONLY